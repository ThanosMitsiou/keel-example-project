model Todo {
    fields {
        complete Boolean @default(false)
        title Text
        description Text?
        completedAt Timestamp?
        owner Identity
        dueDate Timestamp?
        project Project
    }

    operations {
        get todo(id)
        list allTodos(complete?) {
            @where(todo.owner == ctx.identity)
        }
        delete deleteTodo(id)
        update updateTodo(id) with (title?, description?, dueDate?, project?)
        update setCompletion(id) with (complete)
        create createTodo() with (title, description?, dueDate?, project.id) {
            @permission(expression: ctx.isAuthenticated)
            @set(todo.owner = ctx.identity)
        }
    }

    @permission(
        actions: [get, list, update, delete],
        expression: todo.owner == ctx.identity
    )
}

model Project {
    fields {
        name Text
        description Text?
        owner Identity
    }

    operations {
        get project(id)
        list allProjects() {
            @where(project.owner == ctx.identity)
        }
        delete deleteProject(id)
        update updateProject(id) with (name?, description?)
        create createProject() with (name, description?) {
            @permission(expression: ctx.isAuthenticated)
            @set(project.owner = ctx.identity)
        }

    }

    @permission(
        actions: [get, list, update, delete],
        expression: project.owner == ctx.identity
    )
}

api Web {
    @graphql

    models {
        Todo
        Project
    }
}

api Console {
    @rpc

    models {
        Todo
        Project
    }
}
